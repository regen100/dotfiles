SHELL := bash
MAKEFILE_PATH := $(abspath $(lastword $(MAKEFILE_LIST)))
DOTFILES_DIR := $(dir $(MAKEFILE_PATH))
PKG-INSTALL := yay --noconfirm --needed -S
PIP-INSTALL := python3 -m pip install --user -U
STOW-INSTALL := stow -d $(DOTFILES_DIR) -t $(HOME)


.PHONY: all
all:

.PHONY: system
system: repo
	@sudo systemctl --now enable dhcpcd@enp3s0.service
	@sudo timedatectl set-ntp true
	@$(PKG-INSTALL) openssh xorg-xauth systemd-boot-pacman-hook
	@sudo sed -ie 's/#X11Forwarding .*/X11Forwarding yes/' /etc/ssh/sshd_config
	@sudo systemctl --now enable sshd
	@touch ~/.Xauthority

.PHONY: repo
repo:
	@if ! which yay >/dev/null; then \
		cd /tmp; \
		git clone https://aur.archlinux.org/yay-bin.git; \
		cd yay-bin; \
		makepkg --noconfirm -si; \
		rm -rf /tmp/yay-bin; \
	fi
	@mkdir -p ~/.config
	@$(PKG-INSTALL) stow
	@$(STOW-INSTALL) pacman
	@if systemctl >/dev/null && ! systemctl is-active --quiet reflector.timer; then \
		$(PKG-INSTALL) reflector-timer; \
		sudo mkdir -p /etc/conf.d; \
		echo COUNTRY=Japan | sudo tee /etc/conf.d/reflector.conf >/dev/null; \
		sudo systemctl enable --now reflector.timer; \
	fi

.PHONY: pip
pip: repo
	@$(PKG-INSTALL) python python-pip python-wheel

.PHONY: utils
utils: repo
	@$(PKG-INSTALL) man htop git-cola direnv
	@$(STOW-INSTALL) htop direnv

.PHONY: git
git: repo
	@$(PKG-INSTALL) git tk git-extras gibo tig
	@$(STOW-INSTALL) git tig
	@if ! grep "\~/\.gitconfig_global" ~/.gitconfig >/dev/null; then \
		echo "[include]" >> ~/.gitconfig; \
		echo "	path = ~/.gitconfig_global" >> ~/.gitconfig; \
	fi

.PHONY: ctags
ctags: repo
	@$(PKG-INSTALL) --mflags "--nocheck" universal-ctags-git
	@$(STOW-INSTALL) ctags

.PHONY: nvim
nvim: repo ctags git nodejs
	@sudo pacman --noconfirm -R vi 2>/dev/null || true
	@$(PKG-INSTALL) neovim shellcheck xclip cmake python-pynvim the_silver_searcher vint neovim-remote neovim-drop-in xxd-standalone bash-language-server
	@$(STOW-INSTALL) nvim
	@vi --headless --cmd "let g:force_install=1" +qa; echo

.PHONY: clang
clang: repo python
	@$(PKG-INSTALL) cmake ninja clang openmp cppcheck ccache compdb cmake-lint ccls
	@mkdir -p ~/.ccache
	@$(STOW-INSTALL) clang ccache
	@$(PIP-INSTALL) cmake-language-server

.PHONY: python
python: repo
	@$(PKG-INSTALL) python-pip python-colorama mypy python-isort yapf flake8 python-hacking python-flake8-docstrings poetry python-pipenv
	@$(STOW-INSTALL) python readline

.PHONY: nodejs
nodejs: repo
	@$(PKG-INSTALL) nodejs npm

.PHONY: rust
rust: repo
	@[ -d $$HOME/.cargo ] || curl https://sh.rustup.rs -sSf | sh -s -- -y
	@$$HOME/.cargo/bin/rustup update stable
	@$$HOME/.cargo/bin/rustup component add rust-src rustfmt-preview clippy rls rust-analysis
	@$(STOW-INSTALL) rust

.PHONY: plantuml
plantuml: repo
	@$(PKG-INSTALL) jdk8-openjdk plantuml

.PHONY: latex
latex: repo font
	@$(PKG-INSTALL) texlive-most texlive-langjapanese qpdfview poppler-data
	@kanji-config-updmap-sys auto

.PHONY: tmux-patch
tmux-patch: repo
	@git clone https://git.archlinux.org/svntogit/community.git --single-branch -b packages/tmux /tmp/arch
	@sed -i "s#source=(#source=('https://github.com/z80oolong/tmux-eaw-fix/archive/master.zip' #; s/sha256sums=(/sha256sums=('SKIP' /" /tmp/arch/trunk/PKGBUILD
	@echo -e "prepare() {\ncd tmux-3.0a; patch -Np1 -i ../tmux-eaw-fix-master/tmux-3.0a-fix.diff\n}" >> /tmp/arch/trunk/PKGBUILD
	@cd /tmp/arch/trunk; makepkg --noconfirm -si
	@rm -rf /tmp/arch

.PHONY: byobu
byobu: repo
	@$(PKG-INSTALL) byobu
	@$(STOW-INSTALL) byobu
	@sudo sed -i 's/^\(set -g .*-.*\)/#\1/g' /usr/share/byobu/keybindings/mouse.tmux.enable
	@sudo sed -i 's/^\(set -g .*-.*\)/#\1/g' /usr/share/byobu/keybindings/mouse.tmux.disable

.PHONY: zsh
zsh: repo wcwidth
	@$(PKG-INSTALL) zsh ccze rlwrap python-pygments lesspipe pkgfile wget unzip pygments-base16 fzf subversion thefuck
	@sudo pkgfile --update
	@mkdir -p ~/bin
	@$(STOW-INSTALL) zsh readline
	@wcwidth-cjk zsh -ic exit </dev/null

.PHONY: wcwidth
wcwidth:
	@if [ ! -f /usr/lib/wcwidth-cjk.so ]; then \
		cp -r $(DOTFILES_DIR).extras/wcwidth-cjk/arch /tmp/wcwidth-cjk; \
		cd /tmp/wcwidth-cjk; \
		makepkg --noconfirm -si; \
		rm -rf /tmp/wcwidth-cjk; \
	fi

.PHONY: xrdp
xrdp: repo
	@$(PKG-INSTALL) xrdp xorgxrdp-git
	@$(STOW-INSTALL) xsession

.PHONY: font
font: repo
	@$(PKG-INSTALL) noto-fonts noto-fonts-cjk noto-fonts-emoji ttf-cica otf-ipaexfont
	@$(STOW-INSTALL) font

.PHONY: verilog
verilog: repo git
	@$(PKG-INSTALL) iverilog gtkwave
	@if ! which iStyle >/dev/null; then \
		cd /tmp; \
		git clone -b v1.21 https://github.com/thomasrussellmurphy/istyle-verilog-formatter.git; \
		cd istyle-verilog-formatter; \
		make; \
		cp bin/release/iStyle /usr/local/bin; \
		rm -rf $$(pwd); \
	fi

.PHONY: debug
debug: repo
	@$(PKG-INSTALL) gdb kcachegrind gperftools
	@$(STOW-INSTALL) gdb

.PHONY: docker
docker: repo
	@$(PKG-INSTALL) docker docker-compose hadolint-bin dockerfile-language-server-bin
