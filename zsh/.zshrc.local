export FZF_DEFAULT_COMMAND="rg --files 2>/dev/null"
_fzf_compgen_path() {
  rg --files 2>/dev/null
}
_fzf_compgen_dir() {
	rg --files --null --sort path 2>/dev/null | xargs -0 dirname | uniq
}
export FZF_CTRL_T_COMMAND=_fzf_compgen_path

[[ -e /usr/share/fzf/completion.zsh ]] && source /usr/share/fzf/completion.zsh
[[ -e /usr/share/fzf/key-bindings.zsh ]] && source /usr/share/fzf/key-bindings.zsh
[[ -e /etc/zsh_command_not_found ]] && source /etc/zsh_command_not_found
[[ -e /usr/share/doc/pkgfile/command-not-found.zsh ]] && source /usr/share/doc/pkgfile/command-not-found.zsh
[[ -e /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]] && source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
[[ -e /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]] && source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
[[ -e /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh ]] && source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
[[ -e /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]] && source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
[[ -n $CLOUDSDK_ROOT_DIR ]] && source $CLOUDSDK_ROOT_DIR/completion.zsh.inc
(( $+commands[direnv] )) && eval "$(direnv hook zsh)"
(( $+commands[keychain] )) && eval "$(keychain --eval --quiet --inherit any --ignore-missing id_rsa id_ed25519)"

if [[ $TERM != linux ]]; then
  if (( $+commands[starship] )); then
    prompt off && eval "$(starship init zsh)"
  elif (( $+functions[prompt_pure_setup] )); then
    prompt pure
  fi
fi

setopt HIST_VERIFY

alias mmv='noglob zmv -W'
alias gdbrun='gdb -ex=run --args'
alias lldbrun='lldb -o run --'
alias valgrindrun='valgrind --exit-on-first-error=yes --error-exitcode=1'

CMAKE_CXX_FLAGS="-fstandalone-debug -fcolor-diagnostics -march=native -ferror-limit=1 -g"
CMAKE_COMMON_OPTIONS=(-DBUILD_SHARED_LIBS=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_INSTALL_PREFIX=install -DBUILD_TESTS=ON)
CMAKE_SCCACHE=(-DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache)
alias -g CMAKE_DEV='"$CMAKE_SCCACHE[@]" -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_FLAGS="$CMAKE_CXX_FLAGS" -DCMAKE_C_FLAGS="$CMAKE_CXX_FLAGS" "$CMAKE_COMMON_OPTIONS[@]"'

mkc() { mkdir -p $1 && cd $1 }
_mkc() { _files -W $1 -/ }

autoload -Uz add-zsh-hook

ls_abbrev() {
  if [[ $ZSH_SUBSHELL -eq 1 ]]; then return; fi
  local -r ls_result=$(COLUMNS=$COLUMNS command ls -aCF --color=always)
  local -r ls_lines=$(echo $ls_result | wc -l)
  if [[ $ls_lines -gt 10 ]]; then
    echo $ls_result | head -n 5
    echo ...
    echo $ls_result | tail -n 5
    echo "$(command ls -1 -A | wc -l) files exist"
  else
    echo $ls_result
  fi
}
add-zsh-hook chpwd ls_abbrev

reset_prompt() {
  echo -ne '\e[5 q'     # reset cursor
  echo -ne '\e[?1000l'  # mouse tracking off
}
add-zsh-hook precmd reset_prompt

reset_env() {
  [[ -z $TMUX ]] && return
  while IFS=$'\n' read v; do
    if [[ ${v:0:1} = - ]]; then
      unset ${v:1}
    else
      export $v
    fi
  done < <(tmux showenv)
}
add-zsh-hook preexec reset_env

url-quote
autoload -XUz manydots-magic 2>/dev/null

[[ -e ~/.zshrc.$HOST ]] && source ~/.zshrc.$HOST
