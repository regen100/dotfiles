[[ -e /usr/share/fzf/completion.zsh ]] && source /usr/share/fzf/completion.zsh
[[ -e /usr/share/fzf/key-bindings.zsh ]] && source /usr/share/fzf/key-bindings.zsh
[[ -e /etc/zsh_command_not_found ]] && source /etc/zsh_command_not_found
[[ -e /usr/share/doc/pkgfile/command-not-found.zsh ]] && source /usr/share/doc/pkgfile/command-not-found.zsh
[[ -e /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]] && source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
[[ -e /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh ]] && source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh

alias mmv='noglob zmv -W'
alias gdbrun='gdb -ex=run --args'
alias lldbrun='lldb -o run --'
alias valgrindrun='valgrind --exit-on-first-error=yes --error-exitcode=1'

CMAKE_CXX_FLAGS="-fstandalone-debug -fcolor-diagnostics -march=native -ferror-limit=1 -g"
CMAKE_COMMON_OPTIONS=(-DBUILD_SHARED_LIBS=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_INSTALL_PREFIX=install -DBUILD_TESTS=ON)
CMAKE_SCCACHE=(-DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache)
alias -g CMAKE_DEV='"$CMAKE_SCCACHE[@]" -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_FLAGS="$CMAKE_CXX_FLAGS" -DCMAKE_C_FLAGS="$CMAKE_CXX_FLAGS" "$CMAKE_COMMON_OPTIONS[@]"'

mkc() { mkdir -p "$1" && cd "$1" }
_mkc() { _files -W "$1" -/ }

ls_abbrev() {
  if [[ $ZSH_SUBSHELL -eq 1 ]]; then
    return
  fi
  local -r ls_result=$(CLICOLOR_FORCE=1 COLUMNS=$COLUMNS command ls -aCF --color=always | sed $'/^\e\[[0-9;]*m$/d')
  local -r ls_lines=$(echo "$ls_result" | wc -l | tr -d ' ')
  if [ $ls_lines -gt 10 ]; then
    echo "$ls_result" | head -n 5
    echo '...'
    echo "$ls_result" | tail -n 5
    echo "$(command ls -1 -A | wc -l | tr -d ' ') files exist"
  else
    echo "$ls_result"
  fi
}

autoload -Uz add-zsh-hook
add-zsh-hook chpwd ls_abbrev

reset_cursor() { echo -ne '\e[5 q' }
add-zsh-hook precmd reset_cursor

(( $+commands[direnv] )) && eval "$(direnv hook zsh)"

url-quote
autoload -Uz manydots-magic && manydots-magic

type prompt_pure_setup >/dev/null 2>&1 && prompt pure

if [[ -f /proc/sys/fs/binfmt_misc/WSLInterop ]]; then
  if ! pgrep -u $USER ssh-agent >/dev/null; then
    ssh-agent >~/.ssh-agent-thing
  fi
  if [[ "$SSH_AGENT_PID" == "" ]]; then
    eval $(<~/.ssh-agent-thing) >/dev/null
  fi
  ssh-add -l >/dev/null || alias ssh='ssh-add -l >/dev/null || ssh-add && unalias ssh; ssh'
else
  unset SSH_AGENT_PID
  if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]; then
    export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
  fi
  export GPG_TTY=$(tty)
  gpg-connect-agent updatestartuptty /bye >/dev/null
fi
