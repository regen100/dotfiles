#!/bin/bash

install_init() {
  loadkeys jp106
  setfont latarcyrheb-sun32
  timedatectl set-ntp true
  wget "https://www.archlinux.org/mirrorlist/?country=JP&protocol=http&protocol=https&ip_version=4&ip_version=6" -O /etc/pacman.d/mirrorlist
  sed -ie "s/^#Server/Server/" /etc/pacman.d/mirrorlist
}

install_checkmode() {
  if [[ -d /sys/firmware/efi/efivars ]]; then
    echo "EFI"
  else
    echo "BIOS"
  fi
}

install_partition() {
  sgdisk -Z -n "0::+512M" -t 0:ef00 -n "0::" -t 0:8300 -p /dev/sda
  mkfs.fat -F32 /dev/sda1
  if [[ -n $LUKS_PASSWD ]]; then
    echo -n "$LUKS_PASSWD" | cryptsetup luksFormat /dev/sda2 -q -d -
    echo -n "$LUKS_PASSWD" | cryptsetup open /dev/sda2 cryptroot -d -
    mkfs.ext4 /dev/mapper/cryptroot
    cryptsetup close cryptroot
  else
    mkfs.ext4 /dev/sda2
  fi
}

install_mount() {
  if [[ -n $LUKS_PASSWD ]]; then
    echo -n "$LUKS_PASSWD" | cryptsetup open /dev/sda2 cryptroot -d -
    mount /dev/mapper/cryptroot /mnt
  else
    mount /dev/sda2 /mnt
  fi
  mkdir -p /mnt/boot
  mount /dev/sda1 /mnt/boot
}

install_system() {
  pacstrap /mnt base base-devel linux linux-lts linux-firmware dhcpcd
  cp /etc/pacman.d/mirrorlist /mnt/etc/pacman.d/mirrorlist
}

install_setup() {
  genfstab -U /mnt >> /mnt/etc/fstab
  arch-chroot /mnt ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime
  arch-chroot /mnt hwclock --systohc --utc
  sed -E 's/^#(en_US|ja_JP)\.UTF-8/\1.UTF-8/' -i /mnt/etc/locale.gen
  arch-chroot /mnt locale-gen
  echo LANG=en_US.UTF-8 > /mnt/etc/locale.conf
  echo KEYMAP=jp106 > /mnt/etc/vconsole.conf
  sed -E 's/^# (%wheel ALL=\(ALL\) ALL)/\1/; s/^# (Defaults env_keep \+= "HOME")/\1/' -i /mnt/etc/sudoers
}

install_hostname() {
  if [[ -z $1 ]]; then
    echo "usage: install_hostname HOSTNAME"
    return 1
  fi

  echo "$1" > /mnt/etc/hostname
  cat << EOS > /mnt/etc/hosts
127.0.0.1	localhost
::1		localhost
127.0.1.1	$1.localdomain	$1
EOS
}

install_bootloader() {
  local PARTUUID UCODE
  arch-chroot /mnt mkinitcpio -P
  arch-chroot /mnt bootctl --path=/boot install
  if lscpu | grep GenuineIntel >/dev/null; then
    UCODE="initrd  /intel-ucode.img"
    pacstrap /mnt intel-ucode
  elif lscpu | grep AuthenticAMD >/dev/null; then
    UCODE="initrd  /amd-ucode.img"
    pacstrap /mnt amd-ucode
  else
    UCODE=
  fi
  PARTUUID=$(blkid -s PARTUUID -o value /dev/sda2)
  if [[ -n $LUKS_PASSWD ]]; then
    OPTS="root=/dev/mapper/cryptroot cryptdevice=PARTUUID=$PARTUUID:cryptroot:allow-discards add_efi_memmap"
  else
    OPTS="root=PARTUUID=$PARTUUID add_efi_memmap"
  fi
  cat << EOS > /mnt/boot/loader/entries/arch.conf
title   Arch Linux
linux   /vmlinuz-linux
$UCODE
initrd  /initramfs-linux.img
options $OPTS
EOS
  cat << EOS > /mnt/boot/loader/entries/arch-lts.conf
title   Arch Linux (LTS)
linux   /vmlinuz-linux-lts
initrd  /initramfs-linux-lts.img
options $OPTS
EOS
  cat << EOS > /mnt/boot/loader/loader.conf
default Arch Linux
timeout 3
editor  yes
EOS
}

install_user() {
  if [[ -z $1 ]]; then
    echo "usage: install_user USER"
    return 1
  fi

  pacstrap /mnt git zsh
  arch-chroot /mnt useradd -m -g wheel -s /bin/zsh "$1"
  arch-chroot /mnt passwd "$1"
  arch-chroot /mnt su "$1" -c "git clone https://github.com/regen100/dotfiles.git ~/dotfiles"
}
