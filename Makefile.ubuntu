SHELL := bash
MAKEFILE_PATH := $(abspath $(lastword $(MAKEFILE_LIST)))
DOTFILES_DIR := $(dir $(MAKEFILE_PATH))
APT-INSTALL := sudo apt-get install -y --no-install-recommends
PIP-INSTALL := sudo python3 -m pip install -U
STOW-INSTALL := stow -d $(DOTFILES_DIR) -t $(HOME)


.PHONY: all
all:

.PHONY: repo
repo:
	@if grep "//a" /etc/apt/sources.list > /dev/null; then \
		sudo sed -ie "s#//a#//jp.a#g" /etc/apt/sources.list; \
		sudo apt-get update; \
	fi
	@$(APT-INSTALL) software-properties-common wget

.PHONY: pip
pip: repo stow
	@$(APT-INSTALL) python3-pip python3-setuptools python3-wheel
	@pip3 install --user -U pip

.PHONY: utils
utils:
	@$(APT-INSTALL) htop

.PHONY: stow
stow:
	@$(APT-INSTALL) stow

.PHONY: git
git: stow
	@$(APT-INSTALL) git tig
	@$(STOW-INSTALL) git tig
	@if ! grep "\~/\.gitconfig_global" ~/.gitconfig >/dev/null; then \
		echo "[include]" >> ~/.gitconfig; \
		echo "	path = ~/.gitconfig_global" >> ~/.gitconfig; \
	fi

.PHONY: nvim
nvim: repo git
	@if [ ! -f /etc/apt/sources.list.d/neovim-ppa-ubuntu-stable-xenial.list ]; then \
		sudo add-apt-repository -y ppa:neovim-ppa/stable; \
		sudo apt-get update; \
	fi
	@$(APT-INSTALL) neovim xclip
	@sudo update-alternatives --install /usr/bin/vi vi /usr/bin/nvim 60
	@sudo update-alternatives --install /usr/bin/vim vim /usr/bin/nvim 60
	@sudo update-alternatives --install /usr/bin/editor editor /usr/bin/nvim 60
	@mkdir -p ~/.config
	@$(STOW-INSTALL) nvim
	@vi --headless --cmd "let g:force_install=1" +qa; echo

.PHONY: clang
clang: repo pip stow
	@$(APT-INSTALL) cmake make ninja-build clang clang-tidy clang-format
	@$(STOW-INSTALL) clang

.PHONY: python
python: pip
	@pip install --user poetry

.PHONY: zsh
zsh: stow git
	@$(APT-INSTALL) zsh command-not-found wget
	@wget -O ~/.zshrc https://git.grml.org/f/grml-etc-core/etc/zsh/zshrc
	@mkdir -p ~/bin
	@$(STOW-INSTALL) zsh

