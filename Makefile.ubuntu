SHELL := bash
MAKEFILE_PATH := $(abspath $(lastword $(MAKEFILE_LIST)))
DOTFILES_DIR := $(dir $(MAKEFILE_PATH))
APT-INSTALL := sudo apt-get install -y --no-install-recommends
PIP-INSTALL := sudo python3 -m pip install -U
STOW-INSTALL := stow -d $(DOTFILES_DIR) -t $(HOME)


.PHONY: all
all:

.PHONY: repo
repo:
	@if grep "//archive.ubuntu.com" /etc/apt/sources.list > /dev/null; then \
		sudo sed -ie "s#//archive.ubuntu.com#//jp.archive.ubuntu.com#g" /etc/apt/sources.list; \
		sudo apt-get update; \
	fi
	@$(APT-INSTALL) software-properties-common wget

.PHONY: pip
pip: repo stow
	@$(APT-INSTALL) python3-pip python3-setuptools python3-wheel
	@pip3 install --user -U pip

.PHONY: utils
utils:
	@$(APT-INSTALL) htop xclip bat
	@$(APT-INSTALL) fzf | true
	@curl -sSL https://github.com/BurntSushi/ripgrep/releases/download/13.0.0/ripgrep_13.0.0_amd64.deb -o /tmp/ripgrep.deb && sudo dpkg -i /tmp/ripgrep.deb && rm /tmp/ripgrep.deb

.PHONY: stow
stow:
	@$(APT-INSTALL) stow

.PHONY: git
git: stow
	@$(APT-INSTALL) git tig
	@$(STOW-INSTALL) git tig
	@[[ -f ~/.gitconfig ]] || touch ~/.gitconfig
	@if ! grep "\~/\.gitconfig_global" ~/.gitconfig >/dev/null; then \
		echo "[include]" >> ~/.gitconfig; \
		echo "	path = ~/.gitconfig_global" >> ~/.gitconfig; \
	fi
	@mkdir -p /tmp/git-delta && curl -sSL https://github.com/dandavison/delta/releases/download/0.8.2/delta-0.8.2-x86_64-unknown-linux-gnu.tar.gz | tar xz -C /tmp/git-delta --strip-components 1 \
		&& sudo mv /tmp/git-delta/delta /usr/local/bin && rm /tmp/git-delta -rf

.PHONY: efm
efm: repo
	@mkdir -p /tmp/efm-langserver
	@curl -fsSL https://github.com/mattn/efm-langserver/releases/download/v0.0.40/efm-langserver_v0.0.40_linux_amd64.tar.gz | sudo tar -xz -C /tmp/efm-langserver --strip-components 1
	@sudo /usr/bin/install /tmp/efm-langserver/efm-langserver /usr/local/bin
	@rm -rf /tmp/efm-langserver
	@$(STOW-INSTALL) efm

.PHONY: nvim
nvim: repo git utils efm
	@if [ ! -f /etc/apt/sources.list.d/neovim-ppa-ubuntu-unstable-xenial.list ]; then \
		sudo add-apt-repository -y ppa:neovim-ppa/unstable; \
		sudo apt-get update; \
	fi
	@$(APT-INSTALL) neovim
	@sudo update-alternatives --install /usr/bin/vi vi /usr/bin/nvim 60
	@sudo update-alternatives --install /usr/bin/vim vim /usr/bin/nvim 60
	@sudo update-alternatives --install /usr/bin/editor editor /usr/bin/nvim 60
	@mkdir -p ~/.config
	@$(STOW-INSTALL) nvim
	@vi --headless --cmd "let g:force_install=1" +qa; echo
	@vi --headless --cmd "let g:vscode=1" --cmd "let g:force_install=1" +qa; echo

.PHONY: clang
clang: repo stow
	@wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
	@echo "deb http://apt.llvm.org/$$(lsb_release -cs)/ llvm-toolchain-$$(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/llvm.list
	@sudo apt-get update
	@$(APT-INSTALL) cmake make ninja-build clang clang-tidy clang-format clangd
	@$(STOW-INSTALL) clang

.PHONY: python
python: pip
	@pip install --user poetry

.PHONY: zsh
zsh: stow git
	@echo 'deb http://download.opensuse.org/repositories/shells:/zsh-users:/zsh-completions/xUbuntu_18.04/ /' | sudo tee /etc/apt/sources.list.d/shells:zsh-users:zsh-completions.list
	@curl -fsSL https://download.opensuse.org/repositories/shells:zsh-users:zsh-completions/xUbuntu_19.10/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/shells_zsh-users_zsh-completions.gpg > /dev/null
	@echo 'deb http://download.opensuse.org/repositories/shells:/zsh-users:/zsh-syntax-highlighting/xUbuntu_18.04/ /' | sudo tee /etc/apt/sources.list.d/shells:zsh-users:zsh-syntax-highlighting.list
	@curl -fsSL https://download.opensuse.org/repositories/shells:zsh-users:zsh-syntax-highlighting/xUbuntu_19.10/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/shells_zsh-users_zsh-syntax-highlighting.gpg > /dev/null
	@echo 'deb http://download.opensuse.org/repositories/shells:/zsh-users:/zsh-autosuggestions/xUbuntu_18.04/ /' | sudo tee /etc/apt/sources.list.d/shells:zsh-users:zsh-autosuggestions.list
	@curl -fsSL https://download.opensuse.org/repositories/shells:zsh-users:zsh-autosuggestions/xUbuntu_19.10/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/shells_zsh-users_zsh-autosuggestions.gpg > /dev/null
	@sudo apt-get update
	@$(APT-INSTALL) zsh command-not-found wget zsh-completions zsh-syntax-highlighting zsh-autosuggestions
	@curl -sSL -o ~/.zshrc https://github.com/grml/grml-etc-core/raw/master/etc/zsh/zshrc
	@mkdir -p ~/bin
	@$(STOW-INSTALL) zsh
	@sh -c "$(curl -fsSL https://starship.rs/install.sh)" -- -y
	@curl -sSL https://download.opensuse.org/repositories/shells:/zsh-users:/zsh-autosuggestions/xUbuntu_18.04/amd64/zsh-autosuggestions_0.5.0+1.1_amd64.deb -o /tmp/zsh-autosuggestions.deb && sudo dpkg -i /tmp/zsh-autosuggestions.deb

.PHONY: bazel
bazel: repo
	@sudo mkdir -p /usr/local/bin/bazel-compilation-database
	@curl -fsSL https://github.com/grailbio/bazel-compilation-database/archive/0.4.5.tar.gz | sudo tar -xz -C /usr/local/bin/bazel-compilation-database --strip-components 1
	@sudo ln -sf bazel-compilation-database/generate.sh /usr/local/bin/bazel-compdb
